/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Zaz_Module.cpp                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: akharrou <akharrou@student.42.us.org>      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/07/28 14:53:57 by akharrou          #+#    #+#             */
/*   Updated: 2019/07/28 14:54:08 by akharrou         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../Includes/GKrellM.hpp"
#include "../Includes/GKrellM_Modules.hpp"

/* OPERATOR OVERLOAD(S) - - - - - - - - - - - - - - - - - - - - - - - - - - */

Zaz_Module &	Zaz_Module::operator = ( const Zaz_Module & rhs ) {
	(void)rhs;
	return (*this);
}


/* PUBLIC MEMBER FUNCTION(S) - - - - - - - - - - - - - - - - - - - - - - - - */

void	Zaz_Module::update() {

	static int state = 0;

	unicorn = unicornFrame[state++ % 5];

	if (state == INT_MAX)
		state = 2;
}

void	Zaz_Module::render() {

	std::cout << "\n/* — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — */\n";
	std::cout << "/* ZAZ'S FAVORITE ANIMAL */\n\n";

	std::cout << unicorn << "\n";
}


/* PUBLIC CONSTRUCTOR / DECONSTRUCTOR - - - - - - - - - - - - - - - - - - - - */

Zaz_Module::~Zaz_Module( void ) {}

Zaz_Module::Zaz_Module( const Zaz_Module & src ) {
	*this = src;
}

Zaz_Module::Zaz_Module( void ) {
	name = "Zaz Module";

	unicornFrame[0] =
		"        /'\n"
		"       //\n"
		"   .  //\n"
		"   |\\//7\n"
		"  /' \" \\\n"
		" .   . .\n"
		" | (    \\     '._\n"
		" |  '._  '    '. '\n"
		" /    \\'-'_---. ) )\n"
		".              :.'\n"
		"|               \\\n"
		"| .    .   .     .\n"
		"' .    |  |      |\n"
		" \\^   /_-':     /\n"
		" / | |    '\\  .'\n"
		"/ /| |     \\\\  |\n"
		"\\ \\( )     // /\n"
		" \\ | |    // /\n"
		"  L! !   // /\n"
		"   [_]  L[_|\n";

	unicornFrame[1] =
        "                                /\n"
        "                      __       //\n"
        "                      -\\~,\\=\\ //\n"
        "                    --=_\\=---//=\n"
        "                  -_ =/  \\/ //\\/\n"
        "                  _,~/   |_   _|\\,\n"
        "     __          ,/_/    \\' | `/_\n"
        "    //\\\\          /       | | |\\_\n"
        "   /(\\ _\\________/        (,_,)`\n"
        "  J(\\_/                       \\\n"
        " ,)\\/     v                \\   |\n"
        " / Y      (         Y       | /J\n"
        "(7 |       \\        |       '/ \\\n"
        "'| (       /\\_______\\_     _Y_  \\\n"
        " 'Y \\     / \\     7   \\   /   \\  \\\n"
        " ',) (   /   )   /    |  /    (  )\n"
        "   '~(  )   / __/     i J     / /\n"
        "     \\  /   \\ \\       | |   _/ /\n"
        "     | |     )_\\_     )_\\_/__\\/\n"
        "     /_\\     |___\\    |___\\\n"
        "    (___)\n";

	unicornFrame[2] =
        "                   /\n"
        "                   __       //\n"
        "                   -\\= \\=\\ //\n"
        "                 --=_\\=---//=--\n"
        "               -_==/  \\/ //\\/--\n"
        "                ==/   /O   O\\==--\n"
        "   _ _ _ _     /_/    \\  ]  /--\n"
        "  /\\ ( (- \\    /       ] ] ]==-\n"
        " (\\ _\\_\\_\\-\\__/     \\  (,_,)--\n"
        "(\\_/                 \\     \\-\n"
        "\\/      /       (   ( \\  ] /)\n"
        "/      (         \\   \\_ \\./ )\n"
        "(       \\         \\      )  \\\n"
        "(       /\\_ _ _ _ /---/ /\\_  \\\n"
        " \\     / \\     / ____/ /   \\  \\\n"
        "  (   /   )   / /  /__ )   (  )\n"
        "  (  )   / __/ '---`       / /\n"
        "  \\  /   \\ \\             _/ /\n"
        "  ] ]     )_\\_         /__\\/\n"
        "  /_\\     ]___\\\n"
        " (___)\n";

	unicornFrame[3] =
        "                      . . . .\n"
        "                      ,`,`,`,`,\n"
        ". . . .               `\\`\\`\\`\\;\n"
        "`\\`\\`\\`\\`,            ~|;!;!;\\!\n"
        " ~\\;\\;\\;\\|\\          (--,!!!~`!       .\n"
        "(--,\\\\\\===~\\         (--,|||~`!     ./\n"
        " (--,\\\\\\===~\\         `,-,~,=,:. _,//\n"
        "  (--,\\\\\\==~`\\        ~-=~-.---|\\;/J,\n"
        "   (--,\\\\\\((```==.    ~'`~/       a |\n"
        "     (-,.\\\\('('(`\\\\.  ~'=~|     \\_.  \\\n"
        "        (,--(,(,(,'\\\\. ~'=|       \\\\_;>\n"
        "          (,-( ,(,(,;\\\\ ~=/        \\\n"
        "          (,-/ (.(.(,;\\\\,/          )\n"
        "           (,--/,;,;,;,\\\\         ./------.\n"
        "             (==,-;-'`;'         /_,----`. \\\n"
        "     ,.--_,__.-'                    `--.  ` \\\n"
        "    (='~-_,--/        ,       ,!,___--. \\  \\_)\n"
        "   (-/~(     |         \\   ,_-         | ) /_|\n"
        "   (~/((\\    )\\._,      |-'         _,/ /\n"
        "    \\\\))))  /   ./~.    |           \\_\\;\n"
        " ,__/////  /   /    )  /\n"
        "  '===~'   |  |    (, <.\n"
        "           / /       \\. \\\n"
        "         _/ /          \\_\\\n"
        "        /_!/            >_\\\n";

	unicornFrame[4] =
        "        \\\\\\\\                         ||\n"
        "         \\\\\\\\\\                       ||\n"
        "          \\\\\\\\                       ||\n"
        "           \\\\\\\\           \\\\\\\\\\      ||\n"
        "             \\\\\\         \\\\\\\\\\\\\\\\\\   ||\n"
        "      __    __\\\\\\__    \\\\\\\\\\\\\\|\\ \\\\\\\\||\n"
        "     /  |  /       \\  \\\\\\\\\\\\\\\\|\\\\ ___||_\n"
        "    / | | /         \\  \\\\\\\\\\\\\\\\_ \\     o \\____\n"
        " __/ /| |/      \\    \\\\\\\\\\\\\\\\\\/               \\\n"
        "|__L/ |________  \\    \\\\\\\\\\\\\\/     \\____/-----/\n"
        "       __/ /\\     \\    \\\\\\\\\\/        /\n"
        "      |__L/  \\ \\   \\    \\\\\\/      / /\n"
        "              \\ \\   \\_   \\/      / /\n"
        "               \\ \\       /      / /\n"
        "                \\ \\/           / /\n"
        "                 \\ |          / /\n"
        "                  \\|           /\n"
        "                   |    |     /\n"
        "                   \\    |____/|\n"
        "                    \\   |  \\  |\n"
        "                     \\  |   \\ \\\n"
        "                      \\ \\    \\ \\\n"
        "                       \\ \\    \\ \\\n"
        "                        \\ \\    \\ \\\n"
        "                         \\ \\    \\_\\\n"
        "                          \\_\\    | \\\n"
        "                           | \\   \\\\|\n"
        "                           \\\\|    \\|\n"
        "                            \\|\n";
}
